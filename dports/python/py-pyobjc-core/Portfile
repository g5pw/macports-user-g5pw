# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=portfile:et:sw=4:ts=4:sts=4
# $Id$

PortSystem 1.0
PortGroup python 1.0

set my_name         pyobjc-core
name                py-${my_name}
version             2.4
python.versions     26 27 32 33
categories          python devel
license             MIT
maintainers         nomaintainer
platforms           darwin
description         bidirectional bridge between python and Objective C
long_description    The PyObjC project aims to provide a bridge between \
                    the Python and Objective-C programming languages. The \
                    bridge is intended to be fully bidirectional, allowing \
                    the Python programmer to take full advantage of the \
                    power provided by various Objective-C based toolkits \
                    and the Objective-C programmer transparent access to \
                    Python based functionality.

homepage            http://pypi.python.org/pypi/${my_name}
master_sites        http://pypi.python.org/packages/source/p/${my_name}/
distname            ${my_name}-${version}

checksums           rmd160  9ec46a504e272128aeadff93c9dce8c1b26f73df \
                    sha256  7f9fc1b481a6f91ad668631b69e3c9e0f3cbf2474eb2d67aea8d1082c54a9a91

if {${name} != ${subport}} {
    depends_lib-append	port:py${python.version}-distribute \
                        port:py${python.version}-py2app \
                        port:libxml2

    post-destroot {
        xinstall -d -m 775 ${destroot}${prefix}/share/doc/${subport}
        # Don't copy Install.txt
        xinstall -W ${worksrcpath} -m 644 HISTORIC.txt License.txt NEWS.txt README.txt \
                ${destroot}${prefix}/share/doc/${subport}
        copy ${worksrcpath}/Doc ${destroot}${prefix}/share/doc/${subport}/html
        delete ${destroot}${prefix}/share/doc/${subport}/examples
        copy ${worksrcpath}/Examples \
                ${destroot}${prefix}/share/doc/${subport}/examples
    }
}

livecheck.type  regex
livecheck.url   http://pypi.python.org/pypi/${my_name}/
livecheck.regex {${my_name} ([0-9.]+)}
